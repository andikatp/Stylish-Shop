plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.client"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.client"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias System.getenv("KEYSTOREALIAS")
            keyPassword System.getenv("KEYSTOREPASSWORD")
            storeFile System.getenv("KEYSTOREFILE") ? file(System.getenv("KEYSTOREFILE")) : null
            storePassword System.getenv("KEYSTOREPASSWORD")
        }
    }

    buildTypes {
        release {
            // Use env to detect if it's debug or release
            if (System.getenv("KEYSTOREALIAS") == null) {
                signingConfig signingConfigs.debug
            } else {
                signingConfig signingConfigs.release

                // https://github.com/flutter/flutter/issues/18232
                applicationVariants.all { variant ->
                    variant.outputs.all { output ->
                        // For apk without --split-per-abi
                        output.outputFileName = "app-release.apk"
                        // For apk with --split-per-abi
                        //output.outputFileName = "app-" + output.getFilter(com.android.build.OutputFile.ABI) + "-release.apk";
                    }
                }
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
}
